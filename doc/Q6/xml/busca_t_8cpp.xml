<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="busca_t_8cpp" kind="file" language="C++">
    <compoundname>buscaT.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="yes">buscaT.h</includes>
    <incdepgraph>
      <node id="0">
        <label>buscaT.cpp</label>
        <link refid="busca_t_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>buscaT.h</label>
      </node>
      <node id="1">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="busca_t_8cpp_1a7b719b6c2e1c6c11a65a31eb3fdbcd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buscaTernaria</definition>
        <argsstring>(int *v, int inicio, int fim, int x)</argsstring>
        <name>buscaTernaria</name>
        <param>
          <type>int *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inicio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função para busca de um valor chave informado pelo usuário dentro de um vetor ordenado. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Representa o vetor com a base de dados na qual está buscando se o elemento informado pelo usuário pertence ou não. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inicio</parametername>
</parameternamelist>
<parameterdescription>
<para>Representa o inicio do vetor, possui valor dinâmico na medida que a função chama a si mesma recursivamente. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fim</parametername>
</parameternamelist>
<parameterdescription>
<para>Representa o final do vetor, possui valor dinâmico na medida que a função chama a si mesma recursivamente. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Variável chave a qual está em busca dentro do vetor. Ela foi informada pelo usuário. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna se a variável x pertence ou não ao vetor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="buscaT.cpp" line="20" column="1" bodyfile="buscaT.cpp" bodystart="20" bodyend="37"/>
        <referencedby refid="main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8cpp" startline="18" endline="32">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Rodolpho Erick </para></simplesect>
<simplesect kind="since"><para>16/03/2017  19/03/2017 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buscaT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="busca_t_8cpp_1a7b719b6c2e1c6c11a65a31eb3fdbcd4e" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="busca_t_8cpp_1a7b719b6c2e1c6c11a65a31eb3fdbcd4e" kindref="member">buscaTernaria</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inicio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(inicio<sp/>&lt;=<sp/>fim)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind1<sp/>=<sp/>((fim<sp/>-<sp/>inicio)<sp/>/<sp/>3)<sp/>+<sp/>inicio;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind2<sp/>=<sp/>2<sp/>*<sp/>((fim<sp/>-<sp/>inicio)<sp/>/<sp/>3)<sp/>+<sp/>inicio;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pivot1<sp/>=<sp/>v[ind1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pivot2<sp/>=<sp/>v[ind2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pivot1<sp/>==<sp/>x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pivot2<sp/>==<sp/>x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pivot1<sp/>&gt;<sp/>x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="busca_t_8cpp_1a7b719b6c2e1c6c11a65a31eb3fdbcd4e" kindref="member">buscaTernaria</ref>(v,<sp/>inicio,<sp/>ind1<sp/>-<sp/>1,<sp/>x);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pivot2<sp/>&lt;<sp/>x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="busca_t_8cpp_1a7b719b6c2e1c6c11a65a31eb3fdbcd4e" kindref="member">buscaTernaria</ref>(v,<sp/>ind2<sp/>+<sp/>1,<sp/>fim,<sp/>x);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pivot1<sp/>&lt;<sp/>x<sp/>&amp;&amp;<sp/>pivot2<sp/>&gt;<sp/>x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="busca_t_8cpp_1a7b719b6c2e1c6c11a65a31eb3fdbcd4e" kindref="member">buscaTernaria</ref>(v,<sp/>ind1<sp/>+<sp/>1,<sp/>ind2<sp/>-<sp/>1,<sp/>x);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Não<sp/>encontrou<sp/>o<sp/>elemento.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="buscaT.cpp"/>
  </compounddef>
</doxygen>
