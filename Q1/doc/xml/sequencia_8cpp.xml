<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sequencia_8cpp" kind="file" language="C++">
    <compoundname>sequencia.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="yes">funcaoA.h</includes>
    <includes local="yes">funcaoB.h</includes>
    <incdepgraph>
      <node id="13">
        <label>funcaoA.h</label>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>funcaoB.h</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="9">
        <label>sequencia.cpp</label>
        <link refid="sequencia_8cpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sequencia_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Função principal do programa. </para>        </briefdescription>
        <detaileddescription>
<para>A função principal recebe os parâmetros ainda na linha de comando e de acordo com eles faz o cálculo recursivo do tipo aninhado ou iterativo para duas sequências pré determinadas. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sequencia.cpp" line="22" column="1" bodyfile="sequencia.cpp" bodystart="22" bodyend="39"/>
        <references refid="funcao_a_8cpp_1a93e8e0a76c33f6be41a6d3bb989cc315" compoundref="funcao_a_8cpp" startline="20" endline="30">recursaoA</references>
        <references refid="funcao_a_8cpp_1af0b8f0b007f15848a720738934d34c4f" compoundref="funcao_a_8cpp" startline="37" endline="49">iteracaoA</references>
        <references refid="funcao_b_8cpp_1aae5528256d7430815e27a5fa89caeb55" compoundref="funcao_b_8cpp" startline="21" endline="32">recursaoB</references>
        <references refid="funcao_b_8cpp_1a972094c01b3139f6683ea4df8669162d" compoundref="funcao_b_8cpp" startline="39" endline="51">iteracaoB</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Programa recursivo para cálculo de soma fracionária de 1 até 1/N. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Rodolpho Erick </para></simplesect>
<simplesect kind="since"><para>16/03/2017  18/03/2017 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;funcaoA.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;funcaoB.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="sequencia_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sequencia_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(strcmp(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout.precision(2);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nO<sp/>valor<sp/>da<sp/>sequencia<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>para<sp/>N<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[3]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>e<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/><ref refid="funcao_a_8cpp_1a93e8e0a76c33f6be41a6d3bb989cc315" kindref="member">recursaoA</ref>(atoi(argv[3]),<sp/>0,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(a<sp/>versao<sp/>recursiva<sp/>foi<sp/>usada)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(strcmp(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout.precision(2);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nO<sp/>valor<sp/>da<sp/>sequencia<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>para<sp/>N<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[3]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>e<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/><ref refid="funcao_a_8cpp_1af0b8f0b007f15848a720738934d34c4f" kindref="member">iteracaoA</ref>(atoi(argv[3]))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(a<sp/>versao<sp/>iterativa<sp/>foi<sp/>usada)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(strcmp(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout.precision(2);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nO<sp/>valor<sp/>da<sp/>sequencia<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>para<sp/>N<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[3]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>e<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/><ref refid="funcao_b_8cpp_1aae5528256d7430815e27a5fa89caeb55" kindref="member">recursaoB</ref>(atoi(argv[3]),<sp/>0,<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(a<sp/>versao<sp/>recursiva<sp/>foi<sp/>usada)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout.precision(2);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nO<sp/>valor<sp/>da<sp/>sequencia<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>para<sp/>N<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>argv[3]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>e<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/><ref refid="funcao_b_8cpp_1a972094c01b3139f6683ea4df8669162d" kindref="member">iteracaoB</ref>(atoi(argv[3]))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(a<sp/>versao<sp/>iterativa<sp/>foi<sp/>usada)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="sequencia.cpp"/>
  </compounddef>
</doxygen>
